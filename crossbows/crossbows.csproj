<Project Sdk="Microsoft.NET.Sdk">
  <!-- Mod info -->
  <PropertyGroup>
    <ModName>Crossbows</ModName>
    <ModType>content</ModType>
    <GameVersion>1.19.4</GameVersion>
    <Version>0.2.0-dev.2</Version>
    <ModId>maltiezcrossbows</ModId>
    <Description>Medieval crossbows</Description>
    <Side>Universal</Side>
    <RequiredOnClient>true</RequiredOnClient>
    <RequiredOnServer>false</RequiredOnServer>
  </PropertyGroup>

  <!-- Authors -->
  <ItemGroup>
    <ModInfoAuthors Include="Maltiez" />
  </ItemGroup>

  <!-- Translators -->
  <ItemGroup>
    <ModInfoTranslators Include="Kaofan - Polish" />
    <ModInfoTranslators Include="RikeiR - Japanese" />
  </ItemGroup>

  <!-- Dependencies -->
  <ItemGroup>
    <Dependencies Include="game">
      <Version>$(GameVersion)</Version>
    </Dependencies>
    <Dependencies Include="fsmlib">
      <Version>0.2.12</Version>
    </Dependencies>
    <Dependencies Include="configlib">
      <Version>0.4.2</Version>
    </Dependencies>
  </ItemGroup>

  <!-- Project settings -->
  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <Nullable>enable</Nullable>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
  </PropertyGroup>

  <!-- Paths -->
  <PropertyGroup>
    <ProjectDir>$(MSBuildProjectDirectory)</ProjectDir>
    <OutputDir>bin\$(Configuration)\Mods</OutputDir>
    <OutputPath>$(OutputDir)\$(ModId)</OutputPath>
    <GameDirectory>$(VINTAGE_STORY)</GameDirectory>
    <AssetsDir>$(ProjectDir)\resources\assets</AssetsDir>
    <ModIconFile>$(ProjectDir)\resources\modicon.png</ModIconFile>
    <ReleasesDir>$(ProjectDir)\Releases</ReleasesDir>
    <ReleaseFile>$(ModId)_$(Version).zip</ReleaseFile>
    <ReleasePath>$(ReleasesDir)\$(ReleaseFile)</ReleasePath>
  </PropertyGroup>

  <!-- Formatting JSON files -->
  <PropertyGroup>
    <Scripts>$(ProjectDir)\..\scripts</Scripts>
    <Formatter>$(Scripts)\formatter.py</Formatter>
  </PropertyGroup>
  <ItemGroup>
    <AssetsToFormat Include="$(AssetsDir)\$(ModId)\blocktypes" />
    <AssetsToFormat Include="$(AssetsDir)\$(ModId)\itemtypes" />
    <AssetsToFormat Include="$(AssetsDir)\$(ModId)\patches" />
    <AssetsToFormat Include="$(AssetsDir)\$(ModId)\entities" />
  </ItemGroup>

  <!-- Startup settings -->
  <PropertyGroup>
    <DataFolderName>VintagestoryDataDev</DataFolderName>
    <AppDataDir>C:\Users\user\AppData\Roaming</AppDataDir>
    <DataFolder>$(AppDataDir)\$(DataFolderName)</DataFolder>
    <AditionalModsFolder>$(AppDataDir)\$(DataFolderName)\Mods</AditionalModsFolder>
    <WorldName>test_$(ModId)</WorldName>
    <ModDir>$(ProjectDir)\$(OutputDir)</ModDir>
  </PropertyGroup>

  <!-- Creates/updates modinfo.json file in build directory -->
  <Target Name="ModInfo" AfterTargets="Build">
    <PropertyGroup>
      <ModInfo>
{
    "type": "$(ModType)",
    "name": "$(ModName)",
    "modid": "$(ModId)",
    "version": "$(Version)",

    "description": "$(Description)",
    "authors": [ @(ModInfoAuthors->'"%(Identity)"', ', ') ],
    "translation": [ @(ModInfoTranslators->'"%(Identity)"', ', ') ],

    "dependencies": {
        @(Dependencies->'"%(Identity)": "%(Version)"', ', ')
    },

    "side" : "$(Side)",
    "requiredOnClient": $(RequiredOnClient),
    "requiredOnServer": $(RequiredOnServer)
}
      </ModInfo>
    </PropertyGroup>
    <Message Text="Generating modinfo.json" Importance="high" />
    <WriteLinesToFile File="$(OutputPath)/modinfo.json" Lines="$(ModInfo)" Overwrite="true" WriteOnlyWhenDifferent="true" />
  </Target>

  <!-- Formats asssets files -->
  <Target Name="Format" AfterTargets="ModInfo">
    <Exec Command="python $(Formatter) -a -d %(AssetsToFormat.Identity)" />
  </Target>

  <!-- Copies modicon and assets if it exists into output directory -->
  <Target Name="CopyFilesToOutput" AfterTargets="Format">
    <ItemGroup>
      <ModIcon Include="$(ModIconFile)" />
      <AssetsFolder Include="$(AssetsDir)\**\*.*" />
    </ItemGroup>
    <Copy SourceFiles="@(AssetsFolder)" DestinationFiles="@(AssetsFolder->'$(OutputPath)assets\%(RecursiveDir)%(Filename)%(Extension)')" Condition="Exists('$(AssetsDir)')" />
    <Copy SourceFiles="@(ModIcon)" DestinationFolder="$(OutputPath)" Condition="Exists('$(ModIconFile)')" />
  </Target>

  <!-- Archives output directory into zip and puts it into Releases folder -->
  <Target Name="ZipFiles" AfterTargets="CopyFilesToOutput" Condition=" '$(Configuration)' == 'Release' ">
    <!-- Content mod does not need empty dll, but csproj is required to build one, so we just delete it -->
    <ItemGroup>
      <ExtraFiles Include="$(OutputPath)\*.dll" />
      <ExtraFiles Include="$(OutputPath)\*.pdb" />
      <ExtraFiles Include="$(OutputPath)\*.deps.json" />
    </ItemGroup>
    <Delete Files="@(ExtraFiles)" />
    <Message Text="Pachaging into '$(ReleaseFile)'" Importance="high" />
    <MakeDir Directories="$(ReleasesDir)" />
    <Delete Files="$(ReleasePath)" />
    <ZipDirectory SourceDirectory="$(OutputPath)" DestinationFile="$(ReleasePath)" />
  </Target>
</Project>
